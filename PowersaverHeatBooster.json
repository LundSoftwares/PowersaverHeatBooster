[{"id":"9646f65a50659b71","type":"subflow","name":"Powersaver Boost Offset","info":"This Subflow creates a \"Booster sensor\" to be used with the Powersaver Nodes.\r\n\r\nIn short: \r\nIf you want to boost the heater just before a longer OFF period, set your desired Offset and\r\nthe output will give you a True value if \"Start time for next OFF period\" Minus \"Time now\" is \r\nwithin the offset, and the OFF period is equal or bigger than the Min OFF Hour value.\r\n\r\nExample:\r\nNext OFF period is 5 hours long and starts at 17:00, Offset and Min OFF hours is both is set to 3 hours. \r\nBetween 14:00 and 17:00, the output is True, before and after the value is False.\r\nIf the OFF period was only 2 hours long, the value will be Off all the time and no heater boost will be generated.\r\n\r\nHow to:\r\nConnect the Input to the Schedule Output on one of the Powersaver nodes (Lowest Price and Best Save only!)\r\nSet you desired offset and Min OFF Hours, default is 3 hours. \r\nOptional: Enter a price sensor and a max price for the boost (if actual price is higher than set value, Boost will not happend)\r\nPreferably connect the Output to a HomeAssistant Entity node set to Binary Sensor.","category":"","in":[{"x":70,"y":80,"wires":[{"id":"b8a4c33b70b217c3"}]}],"out":[{"x":1120,"y":110,"wires":[{"id":"f86ce2681c3a2ed8","port":0}]}],"env":[{"name":"offset","type":"num","value":"3","ui":{"icon":"font-awesome/fa-clock-o","label":{"en-US":"Hours Offset"},"type":"input","opts":{"types":["num"]}}},{"name":"minhours","type":"num","value":"3","ui":{"icon":"font-awesome/fa-clock-o","label":{"en-US":"Min OFF Hours"},"type":"input","opts":{"types":["num"]}}},{"name":"maxprice","type":"num","value":"","ui":{"icon":"font-awesome/fa-dollar","label":{"en-US":"Max Price for Boost"},"type":"input","opts":{"types":["num"]}}},{"name":"pricesensor","type":"str","value":"","ui":{"icon":"font-awesome/fa-dollar","label":{"en-US":"Price Sensor"},"type":"input","opts":{"types":["str"]}}}],"meta":{},"color":"#DDAA99"},{"id":"b8a4c33b70b217c3","type":"change","z":"9646f65a50659b71","name":"Set Offset","rules":[{"t":"set","p":"payload.offset","pt":"msg","to":"offset","tot":"env"},{"t":"set","p":"payload.minhours","pt":"msg","to":"minhours","tot":"env"},{"t":"set","p":"payload.maxprice","pt":"msg","to":"maxprice","tot":"env"},{"t":"set","p":"payload.pricesensor","pt":"msg","to":"pricesensor","tot":"env"}],"action":"","property":"","from":"","to":"","reg":false,"x":170,"y":80,"wires":[["2d53f71906ab5725","51a10203964976e4"]]},{"id":"2d53f71906ab5725","type":"function","z":"9646f65a50659b71","name":"Find Offset Hour","func":"var boostOffset = msg.payload.offset\nvar minHours = msg.payload.minhours\nvar time\nvar status = false\nfor (let index = 0; index < msg.payload.schedule.length; index++) {\n    if (msg.payload.schedule[index].value == false)\n    {\n        let timestamp = new Date(msg.payload.schedule[index].time)\n        let now = new Date()\n        if (now.getDay() == timestamp.getDay() && now.getMonth() == timestamp.getMonth() && now.getFullYear() == timestamp.getFullYear()) {\n          if (timestamp.getHours() - now.getHours() <= boostOffset && timestamp.getHours() - now.getHours() >= 1) \n            { \n            if (msg.payload.schedule[index].countHours >= minHours)\n              {\n              status = true \n              break\n              }\n            else \n              {\n              status = false\n              }\n            }\n            else \n            { \n              status = false \n            }\n        } \n    }\n}\n\nmsg.payload = status\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":80,"wires":[["90640d12a5990294"]]},{"id":"fa90945c16fb449e","type":"function","z":"9646f65a50659b71","name":"function 6","func":"msg.payload = {\n    entityId: msg.payload.pricesensor\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":200,"wires":[["f3d019f9c67113d1"]]},{"id":"f3d019f9c67113d1","type":"api-current-state","z":"9646f65a50659b71","name":"","server":"e3faae9c.59214","version":3,"outputs":1,"halt_if":"","halt_if_type":"num","halt_if_compare":"lt","entity_id":"","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"actprice","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":560,"y":200,"wires":[["4416162394adc3cc"]]},{"id":"f7286abf5e801c93","type":"change","z":"9646f65a50659b71","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.maxprice","tot":"msg"},{"t":"set","p":"topic","pt":"msg","to":"maxprice","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":400,"y":250,"wires":[["4416162394adc3cc"]]},{"id":"22d96d6952a77fac","type":"function","z":"9646f65a50659b71","name":"Low price?","func":"if (msg.payload.actprice < msg.payload.maxprice)\n{\n    msg.payload = true\n}\nelse\n{\n    msg.payload = false\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":250,"wires":[["8e84f1d6409889f7"]]},{"id":"4416162394adc3cc","type":"join","z":"9646f65a50659b71","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":600,"y":250,"wires":[["22d96d6952a77fac"]]},{"id":"90640d12a5990294","type":"change","z":"9646f65a50659b71","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"a","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":710,"y":80,"wires":[["65512db5bb45bdaa"]]},{"id":"8e84f1d6409889f7","type":"change","z":"9646f65a50659b71","name":"","rules":[{"t":"set","p":"topic","pt":"msg","to":"b","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":710,"y":130,"wires":[["65512db5bb45bdaa"]]},{"id":"65512db5bb45bdaa","type":"join","z":"9646f65a50659b71","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":850,"y":110,"wires":[["f86ce2681c3a2ed8"]]},{"id":"f86ce2681c3a2ed8","type":"function","z":"9646f65a50659b71","name":"Both True?","func":"if (msg.payload.a == true && msg.payload.b == true)\n{\n    msg.payload = true\n}\nelse\n{\n    msg.payload = false\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":110,"wires":[[]]},{"id":"51a10203964976e4","type":"switch","z":"9646f65a50659b71","name":"","property":"payload.pricesensor","propertyType":"msg","rules":[{"t":"empty"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":240,"y":190,"wires":[["7eb98322abf86311"],["fa90945c16fb449e","f7286abf5e801c93"]]},{"id":"7eb98322abf86311","type":"change","z":"9646f65a50659b71","name":"No sensor used!","rules":[{"t":"set","p":"payload","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":480,"y":140,"wires":[["8e84f1d6409889f7"]]},{"id":"e3faae9c.59214","type":"server","name":"Home Assistant","version":5,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true,"heartbeat":false,"heartbeatInterval":"30","areaSelector":"friendlyName","deviceSelector":"friendlyName","entitySelector":"friendlyName","statusSeparator":"at: ","statusYear":"hidden","statusMonth":"short","statusDay":"numeric","statusHourCycle":"h23","statusTimeFormat":"h:m","enableGlobalContextStore":true},{"id":"9f86486a6be00dee","type":"subflow:9646f65a50659b71","z":"5c6241124b106109","name":"","env":[{"name":"offset","value":"2","type":"num"},{"name":"minhours","value":"4","type":"num"},{"name":"maxprice","value":"1","type":"num"},{"name":"pricesensor","value":"sensor.nordpool_ink_moms","type":"str"}],"x":1020,"y":530,"wires":[["660b27a1b6bd69de"]]}]